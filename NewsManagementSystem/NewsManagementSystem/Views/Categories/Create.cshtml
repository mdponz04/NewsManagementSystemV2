@using Data.Enum
@model BusinessLogic.DTOs.CategoryDTOs.CreateCategoryDTO

@{
    ViewData["Title"] = "Create";
    Layout = null;
}

<form asp-action="Create" method="post" id="createCategoryForm">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="CategoryName">Name</label>
        <input asp-for="CategoryName" class="form-control" id="CategoryName" />
        <span asp-validation-for="CategoryName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryDescription">Description: </label>
        <input asp-for="CategoryDescription" class="form-control" id="CategoryDescription" />
        <span asp-validation-for="CategoryDescription" class="text-danger"></span>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-success">Create</button>
        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
    </div>
</form>

<script>
    $('#createCategoryForm').submit(function (event) {
        event.preventDefault();
        
        // Grab the anti-forgery token from the hidden input.
        var token = $('input[name="__RequestVerificationToken"]').val();

        // Build the JSON object using the correct property names.
        var categoryData = {
            CategoryName: $('#CategoryName').val(),
            CategoryDescription: $('#CategoryDescription').val()
        };

        $.ajax({
            url: '/Categories/Create',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(categoryData),
            headers: {
                // Send the antiforgery token in the headers
                'RequestVerificationToken': token,
                // Mark this as an AJAX request (to let the server know)
                'X-Requested-With': 'XMLHttpRequest'
            },
            success: function (response) {
                if (response.success) {
                    // If using a modal, hide it (or remove this if not needed)
                    $('#createModal').modal('hide');
                    location.reload();
                } else {
                    alert("Error: " + response.error);
                }
            },
            error: function (xhr) {
                alert("Failed to create category: " + xhr.responseText);
            }
        });
    });
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
