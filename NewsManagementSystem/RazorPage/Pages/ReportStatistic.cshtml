@page
@model RazorPage.Pages.ReportStatisticModel
@{
    ViewData["Title"] = "News Creation Report";
}

<h1>@ViewData["Title"]</h1>

<!-- Canvas for the chart -->
<canvas id="newsChart" width="800" height="400"></canvas>

@section Scripts {
    <!-- Include Chart.js from a CDN -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Include SignalR client library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>

    <script>
        // Convert the server-side report data to JavaScript
        var reports = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.NewsCreationReports));

        // Extract labels (formatted dates) and counts using the correct property names.
        var labels = reports.map(function (item) {
            var date = new Date(item.Date);
            var day = ("0" + date.getDate()).slice(-2);
            var month = ("0" + (date.getMonth() + 1)).slice(-2);
            return day + "/" + month;
        });
        var counts = reports.map(function (item) {
            return item.Count;
        });

        // Create the Chart.js bar chart
        var ctx = document.getElementById('newsChart').getContext('2d');
        var newsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'News Created',
                    data: counts,
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0
                        }
                    }
                }
            }
        });

        // Set up the SignalR connection
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/myHub")
            .build();

        // Listen for updates from the hub
        connection.on("ReceiveNewsData", function (updatedReports) {
            // Assuming updatedReports is an array with the same structure as 'reports'
            var labels = updatedReports.map(function (item) {
                var date = new Date(item.Date);
                var day = ("0" + date.getDate()).slice(-2);
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                return day + "/" + month;
            });
            var counts = updatedReports.map(function (item) {
                return item.Count;
            });

            // Update chart data and refresh the chart
            newsChart.data.labels = labels;
            newsChart.data.datasets[0].data = counts;
            newsChart.update();
        });

        // Start the SignalR connection.
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}
