@page
@model RazorPage.Pages.SystemAccounts.IndexModel
@{
    ViewData["Title"] = "System Accounts";
}

<!-- Thêm các thư viện cần thiết -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f7fa;
        color: #2c3e50;
    }

    .item-card {
        background: linear-gradient(135deg, #ffffff, #f8f9fa);
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
    }

        .item-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
        }

    .search-container {
        background: #fff;
        border-radius: 50px;
        padding: 10px 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .btn-modern {
        border-radius: 25px;
        padding: 8px 20px;
        transition: all 0.3s ease;
    }

        .btn-modern:hover {
            transform: scale(1.05);
        }

    .header {
        background: linear-gradient(90deg, #007bff, #00d4ff);
        color: white;
        border-radius: 15px 15px 0 0;
        padding: 15px;
    }

    .btn-primary {
        background: linear-gradient(90deg, #007bff, #00d4ff);
        border: none;
    }

        .btn-primary:hover {
            background: linear-gradient(90deg, #0056b3, #0096cc);
        }

    .btn-success {
        background: linear-gradient(135deg, #27ae60, #219653);
        border: none;
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #219653, #1b7c45);
        }

    .modal-content {
        border-radius: 15px;
    }

    .modal-header {
        background: linear-gradient(90deg, #007bff, #00d4ff);
        border-radius: 15px 15px 0 0;
    }
</style>

<div class="container mt-5">
    <div class="header mb-4">
        <h1 class="mb-0 display-4 fw-bold">System Account Explorer</h1>
    </div>

    <div class="search-container mb-4">
        <form asp-action="Search" method="get" class="d-flex align-items-center flex-wrap gap-3">
            <div class="input-group flex-grow-1">
                <span class="input-group-text bg-transparent border-0">
                    <i class="bi bi-search"></i>
                </span>
                <input type="text" id="searchNameString" name="searchNameString"
                       placeholder="Search by Name..." class="form-control border-0 shadow-none" />
            </div>
            <input type="email" id="searchEmailString" name="searchEmailString"
                   placeholder="Search by Email..." class="form-control border-0 shadow-none flex-grow-1" />
            <select id="searchRoleString" name="searchRoleString" class="form-select border-0 shadow-none">
                <option value="">Select Role</option>
                <option value="Staff">Staff</option>
                <option value="Lecturer">Lecturer</option>
            </select>
            <button type="submit" class="btn btn-primary btn-modern">
                <i class="bi bi-arrow-right"></i> Search
            </button>
        </form>
    </div>

    <div class="mb-4">
        <button class="btn btn-success btn-modern shadow" id="createAccountBtn">
            <i class="bi bi-plus-circle"></i> Add New Account
        </button>
    </div>

    <div class="row g-4">
        @{
            int count = 1;
        }
        @if (Model.SystemAccounts?.Items != null)
        {
            @foreach (var item in Model.SystemAccounts.Items)
            {
                <div class="col-md-4">
                    <div class="item-card p-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-primary rounded-pill">#@count</span>
                            <div>
                                <button class="btn btn-warning btn-modern btn-sm me-1 edit-account"
                                        data-account-id="@item.AccountId">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <a asp-page="./Profile" asp-route-id="@item.AccountId"
                                   class="btn btn-info btn-modern btn-sm me-1">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a asp-page="./Delete" asp-route-id="@item.AccountId"
                                   class="btn btn-danger btn-modern btn-sm">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        </div>
                        <h5 class="fw-bold text-primary">@item.AccountName</h5>
                        <p class="text-muted mb-2">@item.AccountEmail</p>
                        <p class="text-muted mb-0"><small>Role: @item.RoleName</small></p>
                    </div>
                </div>
                count++;
            }
        }
    </div>

    @if (Model.SystemAccounts != null)
    {
        <div class="d-flex justify-content-between align-items-center mt-4">
            <nav>
                <ul class="pagination mb-0">
                    @if (Model.SystemAccounts.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a asp-page="./Index" asp-route-pageNumber="@(Model.SystemAccounts.PageNumber - 1)"
                               class="page-link shadow-sm">Previous</a>
                        </li>
                    }
                    <li class="page-item disabled">
                        <span class="page-link">Page @Model.SystemAccounts.PageNumber of @Model.SystemAccounts.TotalPages</span>
                    </li>
                    @if (Model.SystemAccounts.HasNextPage)
                    {
                        <li class="page-item">
                            <a asp-page="./Index" asp-route-pageNumber="@(Model.SystemAccounts.PageNumber + 1)"
                               class="page-link shadow-sm">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<!-- Manage Account Modal -->
<div class="modal fade" id="accountModal" tabindex="-1" aria-labelledby="accountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content shadow-lg border-0">
            <div class="modal-header text-white">
                <h5 class="modal-title fw-semibold" id="accountModalLabel">Manage Account</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4" id="accountModalBody">
                <!-- Dynamic form content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#createAccountBtn').on('click', function () {
                $.ajax({
                    url: '/SystemAccounts/Create',
                    method: 'GET',
                    success: function (response) {
                        $('#accountModalBody').html(response);
                        $('#accountModal').modal('show');
                    },
                    error: function () {
                        toastr.error('Failed to load create form');
                    }
                });
            });

            $(document).on('click', '.edit-account', function () {
                const accountId = $(this).data('account-id');
                $.ajax({
                    url: `/SystemAccounts/Edit?id=${accountId}`,
                    method: 'GET',
                    success: function (response) {
                        $('#accountModalBody').html(response);
                        $('#accountModal').modal('show');
                    },
                    error: function () {
                        toastr.error('Failed to load edit form');
                    }
                });
            });

            $(document).on('submit', '#createAccountForm, #editAccountForm', function (e) {
                e.preventDefault();
                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: $(this).attr('action'),
                    method: 'POST',
                    data: $(this).serialize(),
                    headers: {
                        'RequestVerificationToken': token,
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#accountModal').modal('hide');
                            toastr.success('Account successfully updated');
                            location.reload();
                        } else {
                            toastr.error("Error: " + (response.error || "Unknown error"));
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Failed to save account: ' + (xhr.responseText || "Server error"));
                    }
                });
            });
        });
    </script>
}