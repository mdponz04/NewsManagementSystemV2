@page "/SystemAccounts/Profile/{id:int}"
@model RazorPage.Pages.SystemAccounts.ProfileModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Account Profile";
    var jwtToken = HttpContext.Session.GetString("jwt_token");
    var userRole = ViewData["currrentLoggedInUserRole"] as string;
    string adminRole = "0";
}

<!-- Necessary Libraries -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>

<style>
    :root {
        --primary-color: #1a73e8;
        --secondary-color: #5f6368;
        --light-bg: #f8fafc;
        --text-color: #202124;
        --shadow-color: rgba(0, 0, 0, 0.15);
        --gradient-start: #1a73e8;
        --gradient-end: #34c759;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, var(--light-bg), #e9ecef);
        color: var(--text-color);
        min-height: 100vh;
    }

    .card {
        border: none;
        border-radius: 20px;
        box-shadow: 0 6px 20px var(--shadow-color);
        background: #fff;
        transition: transform 0.4s ease, box-shadow 0.4s ease;
    }

    .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 12px 30px var(--shadow-color);
    }

    .header {
        background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
        color: #fff;
        padding: 2rem;
        border-radius: 20px 20px 0 0;
        text-align: center;
    }

    .header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
        text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .btn-modern {
        border-radius: 30px;
        padding: 0.6rem 1.2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.4s ease;
    }

    .btn-modern:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px var(--shadow-color);
    }

    .btn-warning {
        background: linear-gradient(135deg, #ffc107, #ffca2c);
        border: none;
        color: #fff;
    }

    .btn-warning:hover {
        background: linear-gradient(135deg, #e0a800, #f7b500);
    }

    .btn-outline-secondary {
        border-color: var(--secondary-color);
        color: var(--secondary-color);
    }

    .btn-outline-secondary:hover {
        background: var(--secondary-color);
        color: #fff;
    }

    dl dt {
        font-weight: 600;
        color: var(--primary-color);
    }

    dl dd {
        margin-bottom: 1rem;
        color: var(--text-color);
    }

    keyframes fadeInUp {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<div class="container mt-5 mb-5">
    <div class="card animate__animated animate__fadeIn">
        <div class="header">
            <h1>Account Profile</h1>
        </div>

        <div class="card-body p-4">
            <div class="row justify-content-center animate__animated animate__fadeInUp">
                <div class="col-md-8">
                    <dl class="row">
                        <dt class="col-sm-3">Name</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.SystemAccount.AccountName)</dd>

                        <dt class="col-sm-3">Email</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.SystemAccount.AccountEmail)</dd>

                        <dt class="col-sm-3">Role</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.SystemAccount.RoleName)</dd>
                    </dl>

                    <div class="d-flex justify-content-center gap-3">
                        <button type="button" class="btn btn-warning btn-modern" onclick="loadEditForm(@Model.SystemAccount.AccountId)">
                            <i class="bi bi-pencil"></i> Edit
                        </button>
                        @if (userRole!.Equals(adminRole))
                        {
                            <a asp-page="./Index" class="btn btn-outline-secondary btn-modern">
                                <i class="bi bi-arrow-left"></i> Back
                            </a>
                        }
                        else
                        {
                            <a asp-page="/Index" class="btn btn-outline-secondary btn-modern">
                                <i class="bi bi-arrow-left"></i> Back
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header" style="background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end)); color: #fff;">
                    <h5 class="modal-title" id="editModalLabel">Edit Account</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="editFormContainer"></div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

@section Scripts {
    <script>
        function loadEditForm(id) {
            $.get('/SystemAccounts/Edit/' + id)
                .done(function (data) {
                    $('#editFormContainer').html(data);
                    new bootstrap.Modal(document.getElementById('editModal')).show();
                })
                .fail(function () {
                    alert('Failed to load edit form.');
                });
        }

        $(document).on('submit', '#editAccountForm', function (event) {
            event.preventDefault();

            var token = $('input[name="__RequestVerificationToken"]').val();
            var accountId = $('#AccountId').val();

            var accountData = {
                AccountId: accountId,
                AccountName: $('#AccountName').val(),
                AccountEmail: $('#AccountEmail').val()
            };

            $.ajax({
                url: '/SystemAccounts/Edit/' + accountId,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(accountData),
                headers: {
                    'RequestVerificationToken': token,
                    'X-Requested-With': 'XMLHttpRequest'
                },
                success: function (response) {
                    if (response.success) {
                        $('#editModal').modal('hide');

                        // Update the displayed data on the Profile page
                        $('.row dd:eq(0)').text(accountData.AccountName); // Update Name
                        $('.row dd:eq(1)').text(accountData.AccountEmail); // Update Email
                    } else {
                        alert("Error: " + response.error);
                    }
                },
                error: function (xhr) {
                    alert("Failed to update account: " + xhr.responseText);
                }
            });
        });
    </script>
}