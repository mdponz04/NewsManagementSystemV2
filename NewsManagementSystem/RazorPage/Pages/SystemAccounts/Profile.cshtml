@page "/SystemAccounts/Profile/{id:int}"
@model RazorPage.Pages.SystemAccounts.ProfileModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Profile";
}

<h1>Profile</h1>

<div>
    <h4>SystemAccount</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SystemAccount.AccountName)
        </dd>
        <dt class="col-sm-2">
            Email
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SystemAccount.AccountEmail)
        </dd>
        <dt class="col-sm-2">
            Role
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SystemAccount.RoleName)
        </dd>
    </dl>
</div>

<button type="button" class="btn btn-warning" onclick="loadEditForm(@Model.SystemAccount.AccountId)">Edit</button>

@* Conditional back button based on user role *@
@* @if (Model.UserRole!.Equals("0")) // Assuming "0" is admin role *@
@* { *@
@*     <a asp-page="./Index" class="btn btn-secondary">Back</a> *@
@* } *@
@* else *@
@* { *@
@*     <a asp-page="/Index" class="btn btn-secondary">Back</a> *@
@* } *@

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Account</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="editFormContainer">
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewData["SuccessMessage"] as string))
{
    <div class="alert alert-success">
        @ViewData["SuccessMessage"]
    </div>
}

@section Scripts {
    <script>
        function loadEditForm(id) {
            $.get('/SystemAccounts/Edit/' + id) // Corrected URL
                .done(function (data) {
                    $('#editFormContainer').html(data);
                    $('#editModal').modal('show');
                })
                .fail(function () {
                    alert('Failed to load edit form.');
                });
        }

        $(document).on('submit', '#editAccountForm', function (event) {
            event.preventDefault();

            var token = $('input[name="__RequestVerificationToken"]').val();
            var accountId = $('#AccountId').val();

            var accountData = {
                AccountId: accountId,
                AccountName: $('#AccountName').val(),
                AccountEmail: $('#AccountEmail').val()
            };

            $.ajax({
                url: '/SystemAccounts/Edit/' + accountId,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(accountData),
                headers: {
                    'RequestVerificationToken': token,
                    'X-Requested-With': 'XMLHttpRequest'
                },
                success: function (response) {
                    if (response.success) {
                        $('#editModal').modal('hide');

                        // Update the displayed data on the Profile page
                        $('.row dd:eq(0)').text(accountData.AccountName); // Update Name
                        $('.row dd:eq(1)').text(accountData.AccountEmail); // Update Email

                    } else {
                        alert("Error: " + response.error);
                    }
                },
                error: function (xhr) {
                    alert("Failed to update account: " + xhr.responseText);
                }
            });
        });
    </script>
}