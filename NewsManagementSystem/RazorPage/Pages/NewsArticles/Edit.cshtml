@page
@model RazorPage.Pages.NewsArticles.EditModel

@{
    ViewData["Title"] = "Edit News Article";
}

<!-- Necessary Libraries -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>

<style>
    :root {
        --primary-color: #1a73e8;
        --secondary-color: #5f6368;
        --light-bg: #f8fafc;
        --text-color: #202124;
        --shadow-color: rgba(0, 0, 0, 0.15);
        --gradient-start: #1a73e8;
        --gradient-end: #34c759;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, var(--light-bg), #e9ecef);
        color: var(--text-color);
        min-height: 100vh;
    }

    .card {
        border: none;
        border-radius: 20px;
        box-shadow: 0 6px 20px var(--shadow-color);
        background: #fff;
        overflow: hidden;
        transition: transform 0.4s ease, box-shadow 0.4s ease;
    }

    .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 12px 30px var(--shadow-color);
    }

    .header {
        background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
        color: #fff;
        padding: 2rem;
        border-radius: 20px 20px 0 0;
        position: relative;
        overflow: hidden;
    }

    .header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: rgba(255, 255, 255, 0.1);
        transform: rotate(30deg);
        pointer-events: none;
        animation: shimmer 6s infinite;
    }

    .header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
        letter-spacing: 1px;
        text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-control, .form-select {
        border-radius: 10px;
        border: 1px solid #ced4da;
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px var(--shadow-color);
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 4px 10px var(--shadow-color);
        outline: none;
    }

    .control-label {
        font-weight: 600;
        color: var(--text-color);
        margin-bottom: 0.5rem;
        display: block;
    }

    .text-danger {
        font-size: 0.9rem;
    }

    .form-check {
        margin-bottom: 0.5rem;
    }

    .form-check-input {
        margin-top: 0.3rem;
        cursor: pointer;
    }

    .form-check-label {
        margin-left: 0.5rem;
        color: var(--text-color);
    }

    .btn-modern {
        border-radius: 30px;
        padding: 0.6rem 1.2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.4s ease;
    }

    .btn-modern:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px var(--shadow-color);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
        border: none;
        color: #fff;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #1557b0, #28a745);
    }

    .btn-outline-secondary {
        border-color: var(--secondary-color);
        color: var(--secondary-color);
    }

    .btn-outline-secondary:hover {
        background: var(--secondary-color);
        color: #fff;
    }

    keyframes shimmer {
        0% { transform: translateX(-100%) rotate(30deg); }
        50% { transform: translateX(100%) rotate(30deg); }
        100% { transform: translateX(100%) rotate(30deg); }
    }

    keyframes fadeInUp {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    media (max-width: 768px) {
        .header h1 {
            font-size: 1.5rem;
        }

        .btn-modern {
            padding: 0.4rem 0.8rem;
            font-size: 0.9rem;
        }
    }
</style>

<div class="container mt-5 mb-5">
    <div class="card animate__animated animate__fadeIn">
        <div class="header">
            <h1>Edit News Article</h1>
        </div>

        <div class="card-body p-4">
            <div class="row justify-content-center">
                <div class="col-md-6 col-lg-5">
                    <form method="post" class="animate__animated animate__fadeInUp">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <input type="hidden" asp-for="NewsArticle.NewsArticleId" />

                        <div class="form-group">
                            <label asp-for="NewsArticle.NewsTitle" class="control-label"></label>
                            <input asp-for="NewsArticle.NewsTitle" class="form-control" value="@Model.GetNewsArticleDTO?.NewsTitle" />
                            <span asp-validation-for="NewsArticle.NewsTitle" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="NewsArticle.Headline" class="control-label"></label>
                            <input asp-for="NewsArticle.Headline" class="form-control" value="@Model.GetNewsArticleDTO?.Headline" />
                            <span asp-validation-for="NewsArticle.Headline" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="NewsArticle.NewsContent" class="control-label"></label>
                            <input asp-for="NewsArticle.NewsContent" class="form-control" value="@Model.GetNewsArticleDTO?.NewsContent" />
                            <span asp-validation-for="NewsArticle.NewsContent" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="NewsArticle.NewsSource" class="control-label"></label>
                            <input asp-for="NewsArticle.NewsSource" class="form-control" value="@Model.GetNewsArticleDTO?.NewsSource" />
                            <span asp-validation-for="NewsArticle.NewsSource" class="text-danger"></span>
                        </div>

                        <!-- Dropdown for Category -->
                        <div class="form-group">
                            <label asp-for="NewsArticle.CategoryId" class="control-label">Category</label>
                            <select asp-for="NewsArticle.CategoryId" class="form-select">
                                <option value="">-- Select Category --</option>
                                @foreach (var category in Model.Category)
                                {
                                    if (category.CategoryId == Model.GetNewsArticleDTO?.CategoryId)
                                    {
                                        <option value="@category.CategoryId" selected>@category.CategoryName</option>
                                    }
                                    else
                                    {
                                        <option value="@category.CategoryId">@category.CategoryName</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="NewsArticle.CategoryId" class="text-danger"></span>
                        </div>

                        <!-- Checkboxes for Tags -->
                        <div class="form-group">
                            <label class="control-label">Tags</label>
                            <div class="row">
                                @foreach (var tag in Model.Tags)
                                {
                                    <div class="col-6 form-check">
                                        <input type="checkbox" 
                                               name="NewsArticle.SelectedTags" 
                                               value="@tag.TagId" 
                                               class="form-check-input" 
                                               @(Model.SelectedTagIds.Contains(tag.TagId) ? "checked" : "") />
                                        <label class="form-check-label">@tag.TagName</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Checkbox for News Status -->
                        <div class="form-group form-check">
                            <input type="checkbox" asp-for="NewsArticle.NewsStatus" class="form-check-input" id="newsStatus" />
                            <label class="form-check-label" for="newsStatus">Published</label>
                        </div>

                        <div class="form-group d-flex justify-content-between">
                            <input type="submit" value="Save" class="btn btn-primary btn-modern" />
                            <a asp-page="./Index" class="btn btn-outline-secondary btn-modern">Back to List</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScripts Partial");}
}