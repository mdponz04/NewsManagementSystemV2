@page
@model RazorPage.Pages.Categories.EditModel

@{
    ViewData["Title"] = "Edit Category";
    Layout = null;
}

<!-- Necessary Libraries -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>

<style>
    :root {
        --primary-color: #1a73e8;
        --secondary-color: #5f6368;
        --light-bg: #f8fafc;
        --text-color: #202124;
        --shadow-color: rgba(0, 0, 0, 0.15);
        --gradient-start: #1a73e8;
        --gradient-end: #34c759;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, var(--light-bg), #e9ecef);
        color: var(--text-color);
        min-height: 100vh;
    }

    .modal-content {
        border-radius: 15px;
        box-shadow: 0 6px 20px var(--shadow-color);
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end)) !important;
    }

    .btn-modern {
        border-radius: 30px;
        padding: 0.6rem 1.2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.4s ease;
    }

    .btn-modern:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px var(--shadow-color);
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #34d058);
        border: none;
        color: #fff;
    }

    .btn-success:hover {
        background: linear-gradient(135deg, #218838, #2ecc71);
    }

    .btn-secondary {
        background: #6c757d;
        color: #fff;
        border: none;
    }

    .btn-secondary:hover {
        background: #5a6268;
    }

    .form-control:focus {
        box-shadow: 0 0 5px rgba(26, 115, 232, 0.5);
        border-color: var(--primary-color);
    }

    keyframes fadeInUp {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content animate__animated animate__fadeInUp">
            <div class="modal-header bg-gradient-primary text-white rounded-top-4 p-3">
                <h5 class="modal-title fw-bold" id="editModalLabel">Edit Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5 bg-light-subtle">
                <form method="post" id="editCategoryForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="CategoryId" name="CategoryID" value="@Model.CategoryDto.CategoryID" />

                    <div class="form-group mb-4">
                        <label asp-for="CategoryDto.CategoryName" class="form-label fw-semibold text-dark opacity-75 mb-2">
                            <i class="bi bi-tag me-2"></i> Name
                        </label>
                        <input asp-for="CategoryDto.CategoryName" class="form-control form-control-lg border-dark-subtle shadow-sm" id="CategoryName" placeholder="Enter category name" />
                        <span asp-validation-for="CategoryDto.CategoryName" class="text-danger small mt-1"></span>
                    </div>

                    <div class="form-group mb-4">
                        <label asp-for="CategoryDto.CategoryDescription" class="form-label fw-semibold text-dark opacity-75 mb-2">
                            <i class="bi bi-card-text me-2"></i> Description
                        </label>
                        <input asp-for="CategoryDto.CategoryDescription" class="form-control form-control-lg border-dark-subtle shadow-sm" id="CategoryDescription" placeholder="Enter category description" />
                        <span asp-validation-for="CategoryDto.CategoryDescription" class="text-danger small mt-1"></span>
                    </div>

                    <div class="mt-5 d-flex justify-content-between align-items-center">
                        <button type="submit" class="btn btn-success btn-modern">
                            <i class="bi bi-save me-2"></i> Save Changes
                        </button>
                        <button type="button" class="btn btn-secondary btn-modern" data-bs-dismiss="modal">
                            <i class="bi bi-x-lg me-2"></i> Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        $('#editCategoryForm').on('submit', function (event) {
            event.preventDefault();

            var token = $('input[name="__RequestVerificationToken"]').val();
            var categoryId = $('#CategoryId').val();

            var categoryData = {
                CategoryID: categoryId,
                CategoryName: $('#CategoryName').val(),
                CategoryDescription: $('#CategoryDescription').val()
            };

            $.ajax({
                url: '/Categories/Edit/' + categoryId,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(categoryData),
                headers: {
                    'RequestVerificationToken': token,
                    'X-Requested-With': 'XMLHttpRequest'
                },
                success: function (response) {
                    if (response.success) {
                        $('#editModal').modal('hide');
                        alert("Category updated successfully!");
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        alert("Error: " + (response.error || "Failed to update category"));
                    }
                },
                error: function (xhr) {
                    alert("Failed to update category: " + (xhr.responseText || "Server error"));
                }
            });
        });
    });
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}