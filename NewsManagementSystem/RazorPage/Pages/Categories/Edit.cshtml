@page
@model RazorPage.Pages.Categories.EditModel

@{
    ViewData["Title"] = "Edit Category";
    Layout = null; // Ensures the view renders without the full layout (ideal for modals)
}

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content rounded-4 shadow-xl border-0 bg-white">
            <div class="modal-header bg-gradient-primary text-white rounded-top-4 p-3">
                <h5 class="modal-title fw-bold" id="editModalLabel">Edit Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5 bg-light-subtle">
                <form method="post" id="editCategoryForm">
                    @Html.AntiForgeryToken()
                    <!-- Hidden field for the Category ID -->
                    <input type="hidden" id="CategoryId" name="CategoryID" value="@Model.CategoryDto.CategoryID" />

                    <div class="form-group mb-5">
                        <label asp-for="CategoryDto.CategoryName" class="form-label fw-semibold text-dark opacity-75 mb-2">
                            <i class="bi bi-tag me-2"></i> Name
                        </label>
                        <input asp-for="CategoryDto.CategoryName" class="form-control form-control-lg border-dark-subtle shadow-sm" id="CategoryName" placeholder="Enter category name" />
                        <span asp-validation-for="CategoryDto.CategoryName" class="text-danger small mt-1"></span>
                    </div>

                    <div class="form-group mb-5">
                        <label asp-for="CategoryDto.CategoryDescription" class="form-label fw-semibold text-dark opacity-75 mb-2">
                            <i class="bi bi-card-text me-2"></i> Description
                        </label>
                        <input asp-for="CategoryDto.CategoryDescription" class="form-control form-control-lg border-dark-subtle shadow-sm" id="CategoryDescription" placeholder="Enter category description" />
                        <span asp-validation-for="CategoryDto.CategoryDescription" class="text-danger small mt-1"></span>
                    </div>

                    <div class="mt-5 d-flex justify-content-between align-items-center">
                        <button type="submit" class="btn btn-success fw-semibold px-5 py-3 rounded-pill shadow-md transition-all duration-300 hover:scale-105">
                            <i class="bi bi-save me-2"></i> Save Changes
                        </button>
                        <button type="button" class="btn btn-secondary fw-semibold px-5 py-3 rounded-pill shadow-md transition-all duration-300 hover:scale-105" data-bs-dismiss="modal">
                            <i class="bi bi-x-lg me-2"></i> Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $('#editCategoryForm').on('submit', function (event) {
                event.preventDefault();

                // Retrieve the antiforgery token
                var token = $('input[name="__RequestVerificationToken"]').val();
                var categoryId = $('#CategoryId').val();

                // Build the data object from the form values
                var categoryData = {
                    CategoryID: categoryId, // Ensure CategoryID is included in the payload
                    CategoryName: $('#CategoryName').val(),
                    CategoryDescription: $('#CategoryDescription').val()
                    // Include additional properties if necessary
                };

                $.ajax({
                    url: '/Categories/Edit/' + categoryId,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(categoryData),
                    headers: {
                        'RequestVerificationToken': token,
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (response) {
                        if (response.success) {
                            // Hide the modal and update the UI (e.g., refresh the category list)
                            $('#editModal').modal('hide');
                            alert("Category updated successfully!");
                            // Optionally update the UI without reloading (e.g., via DataTables or custom logic)
                            // Example: location.reload(); // Uncomment if full reload is needed
                        } else {
                            alert("Error: " + (response.error || "Failed to update category"));
                        }
                    },
                    error: function (xhr) {
                        alert("Failed to update category: " + (xhr.responseText || "Server error"));
                    }
                });
            });
        });
    </script>
}