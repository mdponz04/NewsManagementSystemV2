@page
@using Data.Enum
@model RazorPage.Pages.Categories.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = null;
}

<div class="p-4">
    <h3 class="text-gradient fw-semibold mb-4">Create New Category</h3>
    <form method="post" id="createCategoryForm" class="animate-card shadow-lg p-4 rounded-3 bg-light">
        @Html.AntiForgeryToken()
        <div class="form-group mb-3">
            <label asp-for="CategoryDto.CategoryName" class="fw-medium">Name</label>
            <input asp-for="CategoryDto.CategoryName" class="form-control shadow-sm border-0" id="CategoryName" placeholder="Enter category name..." />
            <span asp-validation-for="CategoryDto.CategoryName" class="text-danger small"></span>
        </div>
        <div class="form-group mb-4">
            <label asp-for="CategoryDto.CategoryDescription" class="fw-medium">Description</label>
            <input asp-for="CategoryDto.CategoryDescription" class="form-control shadow-sm border-0" id="CategoryDescription" placeholder="Enter description..." />
            <span asp-validation-for="CategoryDto.CategoryDescription" class="text-danger small"></span>
        </div>

        <div class="d-flex justify-content-end gap-2">
            <button type="submit" class="btn btn-success animate-btn shadow-sm">
                <i class="fas fa-check me-2"></i>Create
            </button>
            <a class="btn btn-outline-secondary animate-btn shadow-sm" asp-page="./Index">Back to List</a>
        </div>
    </form>
</div>

<style>
    /* Gradient Text */
    .text-gradient {
        background: linear-gradient(90deg, #007bff, #00d4ff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    /* Button Animation */
    .animate-btn {
        transition: all 0.3s ease;
    }

        .animate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

    /* Card Animation */
    .animate-card {
        transition: all 0.3s ease;
        border-radius: 10px;
    }

        .animate-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        }

    /* Custom Typography */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Additional Styling */
    .btn-success {
        background: linear-gradient(135deg, #28a745, #34d058);
        border: none;
    }

    .btn-outline-secondary {
        border-color: #6c757d;
        color: #6c757d;
    }

        .btn-outline-secondary:hover {
            background-color: #e9ecef;
        }

    .form-control:focus {
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        border-color: #007bff;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

<script>
    $('#createCategoryForm').submit(function (event) {
        event.preventDefault();

        // Grab the anti-forgery token from the hidden input
        var token = $('input[name="__RequestVerificationToken"]').val();

        // Build the JSON object using the correct property names
        var categoryData = {
            CategoryName: $('#CategoryName').val(),
            CategoryDescription: $('#CategoryDescription').val()
        };

        // Validate inputs
        if (!categoryData.CategoryName || !categoryData.CategoryDescription) {
            toastr.error("All fields are required.");
            return;
        }

        $.ajax({
            url: '/Categories/Create',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(categoryData),
            headers: {
                'RequestVerificationToken': token,
                'X-Requested-With': 'XMLHttpRequest'
            },
            success: function (response) {
                if (response.success) {
                    $('#createModal').modal('hide');
                    toastr.success('Category created successfully');
                    setTimeout(() => location.reload(), 1000); // Reload sau 1 giây
                } else {
                    toastr.error("Error: " + (response.error || "Unknown error"));
                }
            },
            error: function (xhr) {
                toastr.error("Failed to create category: " + (xhr.responseText || "Server error"));
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}