@page
@using Data.Enum
@model RazorPage.Pages.Categories.CreateModel

@{
    ViewData["Title"] = "Create Category";
}

<!-- Necessary Libraries -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

<style>
    :root {
        --primary-color: #1a73e8;
        --secondary-color: #5f6368;
        --light-bg: #f8fafc;
        --text-color: #202124;
        --shadow-color: rgba(0, 0, 0, 0.15);
        --gradient-start: #1a73e8;
        --gradient-end: #34c759;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, var(--light-bg), #e9ecef);
        color: var(--text-color);
        min-height: 100vh;
    }

    .card {
        border: none;
        border-radius: 20px;
        box-shadow: 0 6px 20px var(--shadow-color);
        background: #fff;
        transition: transform 0.4s ease, box-shadow 0.4s ease;
    }

    .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 12px 30px var(--shadow-color);
    }

    .header {
        background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
        color: #fff;
        padding: 2rem;
        border-radius: 20px 20px 0 0;
        text-align: center;
    }

    .header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
        text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .btn-modern {
        border-radius: 30px;
        padding: 0.6rem 1.2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.4s ease;
    }

    .btn-modern:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px var(--shadow-color);
    }

    .btn-success {
        background: linear-gradient(135deg, #28a745, #34d058);
        border: none;
        color: #fff;
    }

    .btn-success:hover {
        background: linear-gradient(135deg, #218838, #2ecc71);
    }

    .btn-outline-secondary {
        border-color: var(--secondary-color);
        color: var(--secondary-color);
    }

    .btn-outline-secondary:hover {
        background: var(--secondary-color);
        color: #fff;
    }

    .form-control:focus {
        box-shadow: 0 0 5px rgba(26, 115, 232, 0.5);
        border-color: var(--primary-color);
    }

    keyframes fadeInUp {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<div class="container mt-5 mb-5">
    <div class="card animate__animated animate__fadeIn">
        <div class="header">
            <h1>Create Category</h1>
        </div>

        <div class="card-body p-4">
            <form method="post" id="createCategoryForm" class="animate__animated animate__fadeInUp">
                @Html.AntiForgeryToken()
                <div class="form-group mb-3">
                    <label asp-for="CategoryDto.CategoryName" class="form-label fw-medium">Name</label>
                    <input asp-for="CategoryDto.CategoryName" class="form-control shadow-sm" id="CategoryName" placeholder="Enter category name..." />
                    <span asp-validation-for="CategoryDto.CategoryName" class="text-danger small"></span>
                </div>
                <div class="form-group mb-4">
                    <label asp-for="CategoryDto.CategoryDescription" class="form-label fw-medium">Description</label>
                    <input asp-for="CategoryDto.CategoryDescription" class="form-control shadow-sm" id="CategoryDescription" placeholder="Enter description..." />
                    <span asp-validation-for="CategoryDto.CategoryDescription" class="text-danger small"></span>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <button type="submit" class="btn btn-success btn-modern">
                        <i class="bi bi-check"></i> Create
                    </button>
                    <a asp-page="./Index" class="btn btn-outline-secondary btn-modern">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
    $('#createCategoryForm').submit(function (event) {
        event.preventDefault();

        var token = $('input[name="__RequestVerificationToken"]').val();
        var categoryData = {
            CategoryName: $('#CategoryName').val(),
            CategoryDescription: $('#CategoryDescription').val()
        };

        if (!categoryData.CategoryName || !categoryData.CategoryDescription) {
            toastr.error("All fields are required.");
            return;
        }

        $.ajax({
            url: '/Categories/Create',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(categoryData),
            headers: {
                'RequestVerificationToken': token,
                'X-Requested-With': 'XMLHttpRequest'
            },
            success: function (response) {
                if (response.success) {
                    toastr.success('Category created successfully');
                    setTimeout(() => window.location.href = '/Categories/Index', 1000);
                } else {
                    toastr.error("Error: " + (response.error || "Unknown error"));
                }
            },
            error: function (xhr) {
                toastr.error("Failed to create category: " + (xhr.responseText || "Server error"));
            }
        });
    });
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}